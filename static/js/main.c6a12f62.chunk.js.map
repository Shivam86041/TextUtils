{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","newText","toUpperCase","showAlert","newT","toLowerCase","wrd","prompt","r","RegExp","newt","replace","document","getElementById","select","navigator","clipboard","writeText","newTe","split","join","trim","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c6a12f62.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types';\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-a\" href=\"/\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-secondary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n</nav>\r\n  )\r\n}\r\n\r\n// Navbar.proptypes = {\r\n//      title: PropTypes.string\r\n// }\r\n\r\n// Navbar.defaultProps = {\r\n//   title: 'Set'\r\n// }","import React, {useState} from 'react'\r\nexport default function Textform(props) {\r\n    const handleupclick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been change to UpperCase\", \"success\")\r\n    }\r\n    const handledownclick = ()=>{\r\n        let newT = text.toLowerCase();\r\n        setText(newT);\r\n        props.showAlert(\"Text has been change to LowerCase\", \"success\")\r\n    }\r\n    const cleartext = ()=>{\r\n        let c = '';\r\n        setText(c);\r\n        props.showAlert(\"Text Area has been cleared\", \"success\")\r\n    }\r\n    const replwrd = ()=>{\r\n        let wrd = prompt(\"Enter the word to be replaced\");\r\n        let repl = new RegExp(wrd,'g');\r\n\r\n        let r = prompt(\"Enter the word to be replaced with: \");\r\n        let newt = text.replace(wrd, r);\r\n        setText(newt);\r\n    }\r\n    const copyText = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!!!\", \"success\")\r\n    }\r\n    const removespace = ()=>{\r\n        var newTe = text.split(/[ ]+/);\r\n        setText(newTe.join(\" \"));\r\n    }\r\n    const handleonchange = (event)=>{\r\n        // console.log(\"text is changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text = \"Your text\"  Wrong way to update text\r\n    // setText(\"Your text\");  //Right way to update text\r\n    // const [t, setT] = useState('');\r\n    // let words = t.trim();\r\n    // if(t.length()===0){\r\n    //     return 0;\r\n    // }\r\n    // else{\r\n    //     t.length() = words.split(\" \").length();\r\n    // }\r\n  return ( \r\n    <div className='container'>\r\n<div className=\"mb-3\">\r\n<h1 style={{color:props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n  <textarea className=\"form-control\" onChange={handleonchange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'blue':'black'}} value={text} id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary\" onClick={handleupclick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handledownclick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary\" onClick={replwrd}>Find/Replace</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={cleartext}>Clear Area</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={copyText}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={removespace}>Remove Extra Spaces</button>\r\n<div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h2>Your Text Summary</h2>\r\n    <p>{text.trim().length === 0 ? 0 : text.trim().split(\" \").length} words {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length} Minutes to read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Please enter above to preview\"}</p>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n\r\n  )\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport { useState } from \"react\";\n// import About from \"./components/About\"\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Routes,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode]=useState(\"light\");\n  const[alert, setAlert]=useState(null)\n  const showAlert=(message, type)=>{\n      setAlert({\n        msg: message,\n        type:type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#272743';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      // document.title = \"TextUtils - Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      // document.title = \"Install TextUtils Now\";\n      // }, 1500);\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Light Mode\";\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title = \"TextUtils\" mode ={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n      {/* <Route exact path=\"/about\" element={<About />} /> */}\n      <Textform showAlert={showAlert} mode={mode} heading=\"Enter the text to analyze below\"/>\n        {/* </Routes> */}\n      </div> \n      {/* </Router>  */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}